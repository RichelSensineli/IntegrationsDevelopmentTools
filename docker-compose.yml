version: '3'
networks:
  producer_network:
    driver: bridge
  consumer01_network:
    driver: bridge
  consumer02_network:
    driver: bridge
  consumer03_network:
    driver: bridge

services:
  kafka:
    image: spotify/kafka:latest
    ports:
    - "9092:9092"
    - "2181:2181"
    hostname: kafka
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
      AUTO_CREATE_TOPICS: "true"
    command: >
      bash -c
      "(sleep 5s &&
      /opt/kafka_2.11-0.10.1.0/bin/kafka-topics.sh
      --create
      --zookeeper
      localhost:2181 --replication-factor 1 --partitions 1
      --topic csv_topic &) && (supervisord -n)"
    networks:
      - producer_network
      - consumer01_network
      - consumer02_network
      - consumer03_network
      
  producer:
    build: ./Producer
    ports:
      - "5000:5000"
    depends_on:
      - kafka
    networks:
      - producer_network
    #restart: always
    volumes:
      - ./:/csv

  consumer01:
    restart: always
    build: ./consumer01
    working_dir: /consumer01
    ports:
    - "8080:8080"
    depends_on:
      - kafka
    networks:
    - consumer01_network
    environment:
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: groupid1
      CSV_TOPIC: csv_topic
      SERVER_PORT: 8080

  consumer02:
    restart: always
    build: ./consumer02
    working_dir: /consumer02
    ports:
    - "8081:8081"
    depends_on:
      - kafka
    networks:
    - consumer02_network
    environment:
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: groupid2
      CSV_TOPIC: csv_topic
      SERVER_PORT: 8081

  consumer03:
    restart: always
    build: ./consumer03
    working_dir: /consumer03
    ports:
    - "8082:8082"
    depends_on:
      - kafka
    networks:
    - consumer03_network
    environment:
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: groupid3
      CSV_TOPIC: csv_topic
      SERVER_PORT: 8082
